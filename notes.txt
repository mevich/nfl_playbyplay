Methods in a Class:

Instance Methods - always have self as one of the parameters when defining the method
Static Methods - Doesn't use instance variables.
Class Methods - class is one of the parameters when defining the method. Other class methods can be called inside the class method being defined.



input - gameid as url variable. Use flask to display the data
output - a dictionary with quarter num as key fields and a list of json describing the play with all the key parameters as the value

Mistakes:
Class and Method naming conventions - Class and Method names should be as distinct as possible
app = Flask(__name__) -- this gives the application name and the file has to match the same as well. when you run the .py file, the webserver is launched




Input
Output
State Management


Always install through the requirements file. Don't use pip install. --user for installing to the current user. sudo is for installing globally for all users.
pip install -r requirements.txt --user

Jinja templating language is installed along with Flask. All the html is actually written in Jinja.

Ajax request will re-run the flask view and render the template for which request.is_xhr is set to true


Celery and Redis:

Celery is a process scheduling tool that can be used to offload time consuming tasks to a scheduling queue so that they can be run asynchronously.
Celery workers are python processes that run the background(async) jobs
The Celery client communicates with the workers through a message queue

Redis works as both a cache and also a message broker 


method names always start with what the method is actually doing

Always use {}.format(<string>) for concatenating strings instead of using <str> + <str>

when including new js libraries in a html file that also has explicit js script the tags should be used the following way:
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>
<script type="text/javascript">
	......
</script>

Custodial Accounts - Store private keys of a wallet along with the passwords of a user account. Private keys have to be encrypted and stored. Encryption is done with a 32 bit key that is used to both encode and decode a private key. The encoded private keys and the key used to do the encoding should both be stored in the database. The key used for encoding and decoding has to be broken down and stored elsewhere - 16 bits in a local environment variable and 16 bits encoded with the password.


When you set an environment variable with export it is only for that one terminal session. To set the environment variable permanently for a user update the ~/.bash_profile file with the updated environment variable - export EXIST_ENV=[add-on to existing]:$EXIST_ENV

S3 keys and bucket specified in local config file that is not checked into git. The file name is added to .gitignore


fabric for deployment






